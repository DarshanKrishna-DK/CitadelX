{
  "version": 3,
  "sources": [
    "../../citadel_dao/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDsD;;AAAf;AAA/B;AACmD;;AAAf;AAApC;AA1BR;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAqXK;;AAAA;AAAA;AAAA;;AAAA;AArXL;;;AAAA;;;AAqXK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AApWL;;;AAAA;;;AAAA;;;AAAA;AAAA;;AAoWK;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAvBA;;AAAA;AAAA;AAAA;;AAAA;AA7UL;;;AAAA;;;AA6UK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAxBA;;AAAA;AAAA;AAAA;;AAAA;AArTL;;;AAAA;;;AAqTK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA9BA;;AAAA;AAAA;AAAA;;AAAA;AAvRL;;;AAAA;;;AAAA;;;AAAA;AAuRK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA1CA;;AAAA;AAAA;AAAA;;AAAA;AA7OL;;;AAAA;;;AAAA;;;AAAA;;;AA6OK;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AApDA;;AAAA;AAAA;AAAA;;AAAA;AAzLL;;;AAAA;;;AAAA;;;AAyLK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAtDA;;AAAA;AAAA;AAAA;;AAAA;AAnIL;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAmIK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAzCA;;AAAA;AAAA;AAAA;;AAAA;AA1FL;;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA0FK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA9DA;;AAAA;AAAA;AAAA;;AAAA;AA5BL;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA4BK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA5BL;;AAAA;;;;;;;;;AA4BA;;;AA6Be;;AAAe;AAAf;AAAP;AACO;;AAAa;;;;AAAb;AAAP;AACO;;AAAwB;;AAAxB;AAAA;;;AAA+B;;AAAwB;;AAAxB;AAA/B;;;;AAAP;AACO;;AAAiB;;;;AAAjB;AAAP;AAGO;;AAAA;;AAAwB;;AAAxB;AAAP;AACO;;AAAA;;AAAsB;;AAAtB;AAAP;AACO;;AAAA;;AAAA;AAAA;;AAAA;AAAP;AAGA;AAAA;;AAAA;AAAA;AAA0B;AAA1B;AAAA;;AAAA;;AAAA;AACyC;AAAhB;;;;;;AAAzB;AAAe;AAIC;;AAAA;AACF;;AAAA;AACI;;AAAA;AACO;;AAAA;AACL;;AALP;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOb;AAAA;;AAAA;AAAA;AAAA;AAGA;AAA4B;;AAAf;AACb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAGA;AAAA;;AAAA;AAAA;AAAA;AAEA;;;;;AAER;;;AAmB+B;AAAhB;;AAAA;AAAA;AAAA;AAAA;;AAAP;AACa;AAAA;AAGN;;AAAA;;AAAwB;;AAAxB;AAAP;AACO;;AAAA;;AAAsB;;AAAtB;AAAP;AACO;;AAAA;;AAAsB;AAAA;;AAAA;AAAtB;;AAAA;AAAP;AAGA;;AAA4B;;AAAf;AACe;AAAA;AAAA;AAAA;AAAA;AAAA;;AACrB;AAAP;AAGA;;AAAA;AAAA;AAGmB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACoB;;AAAA;AAAvC;AAAA;AAEO;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAP;AAER;;;AAuB+B;AAAhB;;AAAA;AAAA;AAAA;AAAA;;AAAP;AACa;AAAA;AAGb;;AAA4B;;AAAf;AACa;AAAA;AAAA;AAAA;AAAA;;AAC1B;AAGA;AAAA;;AAAA;AAAA;AAA+B;AAA/B;AAAA;;AAAA;;AAAA;AAC+C;AAAjB;;;;;;;AAA9B;AAAoB;AAIF;;AAAA;AAAA;AAAgC;;AAAA;;AAAA;AAAhC;AAA2E;;AAA5E;AAOG;;AACD;AAAA;AAGO;;AAAX;AARC;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAME;;;;;;;;;;AANF;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAOiB;;AAPjB;AAUhB;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAEA;AAER;;;AAmBoC;;AAArB;;AAAA;AAAA;;AAAA;AAAA;;AAAP;AACgB;AAAA;AAAA;AAAA;;AAAA;AACT;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAA8B;;AAA9B;AAAP;AAGe;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAf;;AAAA;;AAAe;AACa;;AAAf;AACa;AAAA;AAAA;AAAA;AAAA;;AAC1B;AAGA;;AAA+B;;AAApB;AACgB;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;AACpB;AAAP;AAG0B;;AAAA;;;AAAA;AAAA;AAAA;;AAAc;AAA3B;AAAA;;AAAA;AACb;AAAA;;AAAA;AAAA;AAGR;;;AACqD;;AAAA;AAAA;;AAAA;AAAqC;AAArC;AAAX;AAA9B;;AAAA;AAAA;;AAGG;AAAA;;AAAA;AAAsC;;AAAA;;AAAA;AAAtC;;;;AAAf;;;AACgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;;AAA7C;;;;;;;;AAGR;;AAAA;AAAA;;AAAA;AAAA;AAEY;;AAAA;;;AAAA;;;;;AACL;;;;;;;;;;;;;AAAA;AAAA;AAAoC;;;;;;;;;;;;;;;;;;;;;AAApC;AAA8F;;AAAA;;AAAA;AAAR;AAAtF;AAAP;;AAAA;AAD2C;;;;;;;AAGnD;;;AAmBoC;;AAArB;;AAAA;AAAA;AAAA;AAAA;;AAAP;AACgB;AAAA;AAAA;AACT;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAA8B;;AAA9B;AAAP;AAGe;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAf;;AAAA;;AAAe;AACa;;AAAf;AACa;AAAA;AAAA;AAAA;AAAA;;AAC1B;AAKI;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AA0IJ;AAOkB;AACN;;AACA;;;;;;;;;;;;AAHJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADM;;;;;;;;;;;;;;AAFK;;;AADN;;;AADH;;;AADV;;;;AAAA;;;AAAA;AAiBO;;AAtJP;;AAAA;AAAA;;AAAA;AAA6C;;;;;;;;;;AAA7C;AACA;;AAAA;;AAAA;;AAAA;AAAA;AAEA;AAER;;;AAmB+B;AAAhB;;AAAA;AAAA;AAAA;;AAAP;AAGmB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACoB;;AAAA;AAAvC;AAAA;AAKO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAP;AAER;;;AAa+B;AAApB;;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AACQ;;;;;;;;;;;;;;;AAAP;AAAA;AAES;;AAAA;AAAA;AACM;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEX;;;;;;;AAAA;;AAAA;AACA;;;;;;;;;;;;;;;;;AADA;AACsD;;AAAA;AAAA;AAAR;AAD9C;AAEA;;;;;;;;;;;;;;;AAFA;AAEoD;;AAAA;;AAAA;AAAR;AAF5C;AAGA;;;;;;;;;;;;;;AAHA;AAG2C;AAAA;AAH3C;AAAR;AAAA;AAKR;;;AAaoC;;AAAzB;;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AACQ;;;;;;;;;;;;;;;;;;;;AAAP;AAAA;AAEY;;AAAA;AAAA;AAEiC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAzC;;;;;;;;;;;;AAAA;AAAA;AACA;;;;;;;;;;;;AADA;AACyC;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AADzC;AAEA;;;;;;;;;;;AAFA;AAEgD;;AAAA;;AAAA;AAAR;AAFxC;AAGA;;;AAHA;AAGwC;AAAA;;AAAA;AAAR;AAHhC;AAAR;AAAA;AAKR;;;AAaQ;;AAAA;;AAAa;AACa;AAAA;AAAA;AAAA;AAAA;;AACnB;;;AAAA;AAAA;;AAAA;AAAP;AAER;;;AAYe;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.citadel_dao.contract.CitadelDAO.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 2 54"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 0x7374616b655f 0x64616f5f636f6e6669675f 0x74726561737572795f 0x70726f706f73616c5f \"dao_counter\" \"proposal_counter\" 0x616374697665 0x706173736564"
    },
    "96": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "98": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "101": {
      "op": "bytec 5 // \"dao_counter\"",
      "defined_out": [
        "\"dao_counter\""
      ],
      "stack_out": [
        "\"dao_counter\""
      ]
    },
    "103": {
      "op": "intc_1 // 0",
      "defined_out": [
        "\"dao_counter\"",
        "0"
      ],
      "stack_out": [
        "\"dao_counter\"",
        "0"
      ]
    },
    "104": {
      "op": "app_global_put",
      "stack_out": []
    },
    "105": {
      "op": "bytec 6 // \"proposal_counter\"",
      "defined_out": [
        "\"proposal_counter\""
      ],
      "stack_out": [
        "\"proposal_counter\""
      ]
    },
    "107": {
      "op": "intc_1 // 0",
      "stack_out": [
        "\"proposal_counter\"",
        "0"
      ]
    },
    "108": {
      "op": "app_global_put",
      "stack_out": []
    },
    "109": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "111": {
      "op": "bz main_bare_routing@15",
      "stack_out": []
    },
    "114": {
      "op": "pushbytess 0x3afbeda8 0xa19bfd38 0x763056a8 0x269f85e4 0x5987381c 0xe3c13f35 0x5dfaab05 0x559d61c6 0xad60a6d2 0xc20e792a // method \"create_dao_proposal(string,string,string,uint64,uint64,uint64,uint64,pay)string\", method \"join_dao(string,pay)string\", method \"create_proposal(string,string,string,string)string\", method \"vote_on_proposal(string,bool)string\", method \"execute_proposal(string,string)uint64\", method \"distribute_revenue(string,uint64)string\", method \"get_dao_info(string)string\", method \"get_proposal_info(string)string\", method \"check_membership(string,account)bool\", method \"get_treasury_balance(string)uint64\"",
      "defined_out": [
        "Method(check_membership(string,account)bool)",
        "Method(create_dao_proposal(string,string,string,uint64,uint64,uint64,uint64,pay)string)",
        "Method(create_proposal(string,string,string,string)string)",
        "Method(distribute_revenue(string,uint64)string)",
        "Method(execute_proposal(string,string)uint64)",
        "Method(get_dao_info(string)string)",
        "Method(get_proposal_info(string)string)",
        "Method(get_treasury_balance(string)uint64)",
        "Method(join_dao(string,pay)string)",
        "Method(vote_on_proposal(string,bool)string)"
      ],
      "stack_out": [
        "Method(create_dao_proposal(string,string,string,uint64,uint64,uint64,uint64,pay)string)",
        "Method(join_dao(string,pay)string)",
        "Method(create_proposal(string,string,string,string)string)",
        "Method(vote_on_proposal(string,bool)string)",
        "Method(execute_proposal(string,string)uint64)",
        "Method(distribute_revenue(string,uint64)string)",
        "Method(get_dao_info(string)string)",
        "Method(get_proposal_info(string)string)",
        "Method(check_membership(string,account)bool)",
        "Method(get_treasury_balance(string)uint64)"
      ]
    },
    "166": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(check_membership(string,account)bool)",
        "Method(create_dao_proposal(string,string,string,uint64,uint64,uint64,uint64,pay)string)",
        "Method(create_proposal(string,string,string,string)string)",
        "Method(distribute_revenue(string,uint64)string)",
        "Method(execute_proposal(string,string)uint64)",
        "Method(get_dao_info(string)string)",
        "Method(get_proposal_info(string)string)",
        "Method(get_treasury_balance(string)uint64)",
        "Method(join_dao(string,pay)string)",
        "Method(vote_on_proposal(string,bool)string)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(create_dao_proposal(string,string,string,uint64,uint64,uint64,uint64,pay)string)",
        "Method(join_dao(string,pay)string)",
        "Method(create_proposal(string,string,string,string)string)",
        "Method(vote_on_proposal(string,bool)string)",
        "Method(execute_proposal(string,string)uint64)",
        "Method(distribute_revenue(string,uint64)string)",
        "Method(get_dao_info(string)string)",
        "Method(get_proposal_info(string)string)",
        "Method(check_membership(string,account)bool)",
        "Method(get_treasury_balance(string)uint64)",
        "tmp%2#0"
      ]
    },
    "169": {
      "op": "match main_create_dao_proposal_route@5 main_join_dao_route@6 main_create_proposal_route@7 main_vote_on_proposal_route@8 main_execute_proposal_route@9 main_distribute_revenue_route@10 main_get_dao_info_route@11 main_get_proposal_info_route@12 main_check_membership_route@13 main_get_treasury_balance_route@14",
      "stack_out": []
    },
    "191": {
      "block": "main_after_if_else@17",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "192": {
      "op": "return",
      "stack_out": []
    },
    "193": {
      "block": "main_get_treasury_balance_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "195": {
      "op": "!",
      "defined_out": [
        "tmp%89#0"
      ],
      "stack_out": [
        "tmp%89#0"
      ]
    },
    "196": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "197": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%90#0"
      ],
      "stack_out": [
        "tmp%90#0"
      ]
    },
    "199": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "200": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%92#0"
      ],
      "stack_out": [
        "tmp%92#0"
      ]
    },
    "203": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%93#0"
      ],
      "stack_out": [
        "tmp%93#0"
      ]
    },
    "206": {
      "callsub": "smart_contracts.citadel_dao.contract.CitadelDAO.get_treasury_balance",
      "op": "callsub get_treasury_balance",
      "defined_out": [
        "to_encode%8#0"
      ],
      "stack_out": [
        "to_encode%8#0"
      ]
    },
    "209": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "210": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "211": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "212": {
      "op": "concat",
      "defined_out": [
        "tmp%94#0"
      ],
      "stack_out": [
        "tmp%94#0"
      ]
    },
    "213": {
      "op": "log",
      "stack_out": []
    },
    "214": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "215": {
      "op": "return",
      "stack_out": []
    },
    "216": {
      "block": "main_check_membership_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "218": {
      "op": "!",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "219": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "220": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "222": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "223": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "226": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "229": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%1#0",
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0",
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "232": {
      "op": "btoi",
      "defined_out": [
        "tmp%83#0",
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%83#0",
        "tmp%84#0"
      ]
    },
    "233": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%83#0",
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%83#0",
        "tmp%85#0"
      ]
    },
    "235": {
      "callsub": "smart_contracts.citadel_dao.contract.CitadelDAO.check_membership",
      "op": "callsub check_membership",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "238": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0",
        "0x151f7c75"
      ]
    },
    "239": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%86#0"
      ]
    },
    "240": {
      "op": "concat",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "241": {
      "op": "log",
      "stack_out": []
    },
    "242": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "243": {
      "op": "return",
      "stack_out": []
    },
    "244": {
      "block": "main_get_proposal_info_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "246": {
      "op": "!",
      "defined_out": [
        "tmp%72#0"
      ],
      "stack_out": [
        "tmp%72#0"
      ]
    },
    "247": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "248": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "250": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "251": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "254": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "257": {
      "callsub": "smart_contracts.citadel_dao.contract.CitadelDAO.get_proposal_info",
      "op": "callsub get_proposal_info",
      "defined_out": [
        "to_encode%7#0"
      ],
      "stack_out": [
        "to_encode%7#0"
      ]
    },
    "260": {
      "op": "dup",
      "defined_out": [
        "to_encode%7#0",
        "to_encode%7#0 (copy)"
      ],
      "stack_out": [
        "to_encode%7#0",
        "to_encode%7#0 (copy)"
      ]
    },
    "261": {
      "op": "len",
      "defined_out": [
        "length%6#0",
        "to_encode%7#0"
      ],
      "stack_out": [
        "to_encode%7#0",
        "length%6#0"
      ]
    },
    "262": {
      "op": "itob",
      "defined_out": [
        "as_bytes%6#0",
        "to_encode%7#0"
      ],
      "stack_out": [
        "to_encode%7#0",
        "as_bytes%6#0"
      ]
    },
    "263": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%6#0",
        "to_encode%7#0"
      ],
      "stack_out": [
        "to_encode%7#0",
        "length_uint16%6#0"
      ]
    },
    "266": {
      "op": "swap",
      "stack_out": [
        "length_uint16%6#0",
        "to_encode%7#0"
      ]
    },
    "267": {
      "op": "concat",
      "defined_out": [
        "encoded_value%6#0"
      ],
      "stack_out": [
        "encoded_value%6#0"
      ]
    },
    "268": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%6#0"
      ],
      "stack_out": [
        "encoded_value%6#0",
        "0x151f7c75"
      ]
    },
    "269": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%6#0"
      ]
    },
    "270": {
      "op": "concat",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "271": {
      "op": "log",
      "stack_out": []
    },
    "272": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "273": {
      "op": "return",
      "stack_out": []
    },
    "274": {
      "block": "main_get_dao_info_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "276": {
      "op": "!",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "277": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "278": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "280": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "281": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "284": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "287": {
      "callsub": "smart_contracts.citadel_dao.contract.CitadelDAO.get_dao_info",
      "op": "callsub get_dao_info",
      "defined_out": [
        "to_encode%6#0"
      ],
      "stack_out": [
        "to_encode%6#0"
      ]
    },
    "290": {
      "op": "dup",
      "defined_out": [
        "to_encode%6#0",
        "to_encode%6#0 (copy)"
      ],
      "stack_out": [
        "to_encode%6#0",
        "to_encode%6#0 (copy)"
      ]
    },
    "291": {
      "op": "len",
      "defined_out": [
        "length%5#0",
        "to_encode%6#0"
      ],
      "stack_out": [
        "to_encode%6#0",
        "length%5#0"
      ]
    },
    "292": {
      "op": "itob",
      "defined_out": [
        "as_bytes%5#0",
        "to_encode%6#0"
      ],
      "stack_out": [
        "to_encode%6#0",
        "as_bytes%5#0"
      ]
    },
    "293": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%5#0",
        "to_encode%6#0"
      ],
      "stack_out": [
        "to_encode%6#0",
        "length_uint16%5#0"
      ]
    },
    "296": {
      "op": "swap",
      "stack_out": [
        "length_uint16%5#0",
        "to_encode%6#0"
      ]
    },
    "297": {
      "op": "concat",
      "defined_out": [
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0"
      ]
    },
    "298": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "0x151f7c75"
      ]
    },
    "299": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%5#0"
      ]
    },
    "300": {
      "op": "concat",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "301": {
      "op": "log",
      "stack_out": []
    },
    "302": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "303": {
      "op": "return",
      "stack_out": []
    },
    "304": {
      "block": "main_distribute_revenue_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "306": {
      "op": "!",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "307": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "308": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "310": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "311": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "314": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "317": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[8]%4#0",
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "reinterpret_bytes[8]%4#0"
      ]
    },
    "320": {
      "op": "btoi",
      "defined_out": [
        "tmp%61#0",
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%61#0",
        "tmp%62#0"
      ]
    },
    "321": {
      "callsub": "smart_contracts.citadel_dao.contract.CitadelDAO.distribute_revenue",
      "op": "callsub distribute_revenue",
      "defined_out": [
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0"
      ]
    },
    "324": {
      "op": "dup",
      "defined_out": [
        "to_encode%5#0",
        "to_encode%5#0 (copy)"
      ],
      "stack_out": [
        "to_encode%5#0",
        "to_encode%5#0 (copy)"
      ]
    },
    "325": {
      "op": "len",
      "defined_out": [
        "length%4#0",
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0",
        "length%4#0"
      ]
    },
    "326": {
      "op": "itob",
      "defined_out": [
        "as_bytes%4#0",
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0",
        "as_bytes%4#0"
      ]
    },
    "327": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%4#0",
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0",
        "length_uint16%4#0"
      ]
    },
    "330": {
      "op": "swap",
      "stack_out": [
        "length_uint16%4#0",
        "to_encode%5#0"
      ]
    },
    "331": {
      "op": "concat",
      "defined_out": [
        "encoded_value%4#0"
      ],
      "stack_out": [
        "encoded_value%4#0"
      ]
    },
    "332": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%4#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "0x151f7c75"
      ]
    },
    "333": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%4#0"
      ]
    },
    "334": {
      "op": "concat",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "335": {
      "op": "log",
      "stack_out": []
    },
    "336": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "337": {
      "op": "return",
      "stack_out": []
    },
    "338": {
      "block": "main_execute_proposal_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "340": {
      "op": "!",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "341": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "342": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "344": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "345": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "348": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "351": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%52#0",
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%52#0",
        "tmp%53#0"
      ]
    },
    "354": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%52#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%52#0",
        "tmp%54#0"
      ]
    },
    "357": {
      "callsub": "smart_contracts.citadel_dao.contract.CitadelDAO.execute_proposal",
      "op": "callsub execute_proposal",
      "defined_out": [
        "to_encode%4#0"
      ],
      "stack_out": [
        "to_encode%4#0"
      ]
    },
    "360": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "361": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "362": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "363": {
      "op": "concat",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "364": {
      "op": "log",
      "stack_out": []
    },
    "365": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "366": {
      "op": "return",
      "stack_out": []
    },
    "367": {
      "block": "main_vote_on_proposal_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "369": {
      "op": "!",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "370": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "371": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "373": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "374": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%44#0"
      ]
    },
    "377": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "380": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%0#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0",
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "383": {
      "callsub": "smart_contracts.citadel_dao.contract.CitadelDAO.vote_on_proposal",
      "op": "callsub vote_on_proposal",
      "defined_out": [
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0"
      ]
    },
    "386": {
      "op": "dup",
      "defined_out": [
        "to_encode%3#0",
        "to_encode%3#0 (copy)"
      ],
      "stack_out": [
        "to_encode%3#0",
        "to_encode%3#0 (copy)"
      ]
    },
    "387": {
      "op": "len",
      "defined_out": [
        "length%3#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0",
        "length%3#0"
      ]
    },
    "388": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0",
        "as_bytes%3#0"
      ]
    },
    "389": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%3#0",
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0",
        "length_uint16%3#0"
      ]
    },
    "392": {
      "op": "swap",
      "stack_out": [
        "length_uint16%3#0",
        "to_encode%3#0"
      ]
    },
    "393": {
      "op": "concat",
      "defined_out": [
        "encoded_value%3#0"
      ],
      "stack_out": [
        "encoded_value%3#0"
      ]
    },
    "394": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "encoded_value%3#0",
        "0x151f7c75"
      ]
    },
    "395": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%3#0"
      ]
    },
    "396": {
      "op": "concat",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "397": {
      "op": "log",
      "stack_out": []
    },
    "398": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "399": {
      "op": "return",
      "stack_out": []
    },
    "400": {
      "block": "main_create_proposal_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "402": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "403": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "404": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "406": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "407": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "410": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "413": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%32#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%33#0"
      ]
    },
    "416": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%32#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%34#0"
      ]
    },
    "419": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%35#0"
      ]
    },
    "422": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0"
      ]
    },
    "425": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%37#0"
      ]
    },
    "428": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0"
      ]
    },
    "431": {
      "callsub": "smart_contracts.citadel_dao.contract.CitadelDAO.create_proposal",
      "op": "callsub create_proposal",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "434": {
      "op": "dup",
      "defined_out": [
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ],
      "stack_out": [
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ]
    },
    "435": {
      "op": "len",
      "defined_out": [
        "length%2#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "length%2#0"
      ]
    },
    "436": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "as_bytes%2#0"
      ]
    },
    "437": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%2#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "length_uint16%2#0"
      ]
    },
    "440": {
      "op": "swap",
      "stack_out": [
        "length_uint16%2#0",
        "to_encode%2#0"
      ]
    },
    "441": {
      "op": "concat",
      "defined_out": [
        "encoded_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0"
      ]
    },
    "442": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%2#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "0x151f7c75"
      ]
    },
    "443": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%2#0"
      ]
    },
    "444": {
      "op": "concat",
      "defined_out": [
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%39#0"
      ]
    },
    "445": {
      "op": "log",
      "stack_out": []
    },
    "446": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "447": {
      "op": "return",
      "stack_out": []
    },
    "448": {
      "block": "main_join_dao_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "450": {
      "op": "!",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "451": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "452": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "454": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "455": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "458": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "461": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "tmp%25#0"
      ]
    },
    "463": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%24#0",
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "tmp%25#0",
        "1"
      ]
    },
    "464": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "gtxn_idx%1#0"
      ]
    },
    "465": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "466": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "468": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "469": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "470": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%24#0",
        "gtxn_idx%1#0"
      ]
    },
    "471": {
      "callsub": "smart_contracts.citadel_dao.contract.CitadelDAO.join_dao",
      "op": "callsub join_dao",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "474": {
      "op": "dup",
      "defined_out": [
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "475": {
      "op": "len",
      "defined_out": [
        "length%1#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "length%1#0"
      ]
    },
    "476": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "as_bytes%1#0"
      ]
    },
    "477": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%1#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "length_uint16%1#0"
      ]
    },
    "480": {
      "op": "swap",
      "stack_out": [
        "length_uint16%1#0",
        "to_encode%1#0"
      ]
    },
    "481": {
      "op": "concat",
      "defined_out": [
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0"
      ]
    },
    "482": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "0x151f7c75"
      ]
    },
    "483": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%1#0"
      ]
    },
    "484": {
      "op": "concat",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "485": {
      "op": "log",
      "stack_out": []
    },
    "486": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "487": {
      "op": "return",
      "stack_out": []
    },
    "488": {
      "block": "main_create_dao_proposal_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "490": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "491": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "492": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "494": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "495": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "498": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "501": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "504": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "507": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "510": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%10#0",
        "tmp%12#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "513": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "516": {
      "op": "btoi",
      "defined_out": [
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0"
      ]
    },
    "517": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "520": {
      "op": "btoi",
      "defined_out": [
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "521": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "reinterpret_bytes[8]%2#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "524": {
      "op": "btoi",
      "defined_out": [
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0"
      ]
    },
    "525": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "reinterpret_bytes[8]%3#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "528": {
      "op": "btoi",
      "defined_out": [
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "529": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0"
      ]
    },
    "531": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%17#0",
        "1"
      ]
    },
    "532": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "gtxn_idx%0#0"
      ]
    },
    "533": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "534": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "536": {
      "op": "intc_0 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "537": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "538": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%13#0",
        "tmp%14#0",
        "tmp%15#0",
        "tmp%16#0",
        "gtxn_idx%0#0"
      ]
    },
    "539": {
      "callsub": "smart_contracts.citadel_dao.contract.CitadelDAO.create_dao_proposal",
      "op": "callsub create_dao_proposal",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "542": {
      "op": "dup",
      "defined_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "543": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length%0#0"
      ]
    },
    "544": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "as_bytes%0#0"
      ]
    },
    "545": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length_uint16%0#0"
      ]
    },
    "548": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ]
    },
    "549": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "550": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "551": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "552": {
      "op": "concat",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "553": {
      "op": "log",
      "stack_out": []
    },
    "554": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "555": {
      "op": "return",
      "stack_out": []
    },
    "556": {
      "block": "main_bare_routing@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%95#0"
      ],
      "stack_out": [
        "tmp%95#0"
      ]
    },
    "558": {
      "op": "bnz main_after_if_else@17",
      "stack_out": []
    },
    "561": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%96#0"
      ],
      "stack_out": [
        "tmp%96#0"
      ]
    },
    "563": {
      "op": "!",
      "defined_out": [
        "tmp%97#0"
      ],
      "stack_out": [
        "tmp%97#0"
      ]
    },
    "564": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "565": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "566": {
      "op": "return",
      "stack_out": []
    },
    "567": {
      "subroutine": "smart_contracts.citadel_dao.contract.CitadelDAO.create_dao_proposal",
      "params": {
        "dao_name#0": "bytes",
        "description#0": "bytes",
        "category#0": "bytes",
        "min_members#0": "uint64",
        "min_stake#0": "uint64",
        "voting_period#0": "uint64",
        "activation_threshold#0": "uint64",
        "payment_txn#0": "uint64"
      },
      "block": "create_dao_proposal",
      "stack_in": [],
      "op": "proto 8 1"
    },
    "570": {
      "op": "frame_dig -5",
      "defined_out": [
        "min_members#0 (copy)"
      ],
      "stack_out": [
        "min_members#0 (copy)"
      ]
    },
    "572": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "min_members#0 (copy)"
      ],
      "stack_out": [
        "min_members#0 (copy)",
        "2"
      ]
    },
    "573": {
      "op": ">=",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "574": {
      "error": "Minimum 2 members required for DAO",
      "op": "assert // Minimum 2 members required for DAO",
      "stack_out": []
    },
    "575": {
      "op": "frame_dig -4",
      "defined_out": [
        "min_stake#0 (copy)"
      ],
      "stack_out": [
        "min_stake#0 (copy)"
      ]
    },
    "577": {
      "op": "pushint 100000 // 100000",
      "defined_out": [
        "100000",
        "min_stake#0 (copy)"
      ],
      "stack_out": [
        "min_stake#0 (copy)",
        "100000"
      ]
    },
    "581": {
      "op": ">=",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "582": {
      "error": "Minimum stake must be at least 0.1 ALGO",
      "op": "assert // Minimum stake must be at least 0.1 ALGO",
      "stack_out": []
    },
    "583": {
      "op": "frame_dig -2",
      "defined_out": [
        "activation_threshold#0 (copy)"
      ],
      "stack_out": [
        "activation_threshold#0 (copy)"
      ]
    },
    "585": {
      "op": "pushint 51 // 51",
      "defined_out": [
        "51",
        "activation_threshold#0 (copy)"
      ],
      "stack_out": [
        "activation_threshold#0 (copy)",
        "51"
      ]
    },
    "587": {
      "op": ">=",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "588": {
      "op": "bz create_dao_proposal_bool_false@3",
      "stack_out": []
    },
    "591": {
      "op": "frame_dig -2",
      "stack_out": [
        "activation_threshold#0 (copy)"
      ]
    },
    "593": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "activation_threshold#0 (copy)"
      ],
      "stack_out": [
        "activation_threshold#0 (copy)",
        "100"
      ]
    },
    "595": {
      "op": "<=",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "596": {
      "op": "bz create_dao_proposal_bool_false@3",
      "stack_out": []
    },
    "599": {
      "op": "intc_0 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "600": {
      "block": "create_dao_proposal_bool_merge@4",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "Threshold must be between 51-100",
      "op": "assert // Threshold must be between 51-100",
      "defined_out": [],
      "stack_out": []
    },
    "601": {
      "op": "frame_dig -3",
      "defined_out": [
        "voting_period#0 (copy)"
      ],
      "stack_out": [
        "voting_period#0 (copy)"
      ]
    },
    "603": {
      "op": "pushint 86400 // 86400",
      "defined_out": [
        "86400",
        "voting_period#0 (copy)"
      ],
      "stack_out": [
        "voting_period#0 (copy)",
        "86400"
      ]
    },
    "607": {
      "op": ">=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "608": {
      "error": "Voting period must be at least 1 day",
      "op": "assert // Voting period must be at least 1 day",
      "stack_out": []
    },
    "609": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment_txn#0 (copy)"
      ],
      "stack_out": [
        "payment_txn#0 (copy)"
      ]
    },
    "611": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "613": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "615": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "616": {
      "error": "Payment must be to contract",
      "op": "assert // Payment must be to contract",
      "stack_out": []
    },
    "617": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment_txn#0 (copy)"
      ]
    },
    "619": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "621": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "623": {
      "op": "==",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "624": {
      "error": "Payment sender must match transaction sender",
      "op": "assert // Payment sender must match transaction sender",
      "stack_out": []
    },
    "625": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment_txn#0 (copy)"
      ]
    },
    "627": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "629": {
      "op": "dup",
      "defined_out": [
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ]
    },
    "630": {
      "op": "frame_dig -4",
      "defined_out": [
        "min_stake#0 (copy)",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%11#0 (copy)",
        "min_stake#0 (copy)"
      ]
    },
    "632": {
      "op": ">=",
      "defined_out": [
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "633": {
      "error": "Initial payment must meet minimum stake",
      "op": "assert // Initial payment must meet minimum stake",
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "634": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "0"
      ]
    },
    "635": {
      "op": "bytec 5 // \"dao_counter\"",
      "defined_out": [
        "\"dao_counter\"",
        "0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "0",
        "\"dao_counter\""
      ]
    },
    "637": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "638": {
      "error": "check self.dao_counter exists",
      "op": "assert // check self.dao_counter exists",
      "stack_out": [
        "tmp%11#0",
        "maybe_value%0#0"
      ]
    },
    "639": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "maybe_value%0#0",
        "1"
      ]
    },
    "640": {
      "op": "+",
      "defined_out": [
        "materialized_values%0#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "materialized_values%0#0"
      ]
    },
    "641": {
      "op": "bytec 5 // \"dao_counter\"",
      "stack_out": [
        "tmp%11#0",
        "materialized_values%0#0",
        "\"dao_counter\""
      ]
    },
    "643": {
      "op": "dig 1",
      "defined_out": [
        "\"dao_counter\"",
        "materialized_values%0#0",
        "materialized_values%0#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "materialized_values%0#0",
        "\"dao_counter\"",
        "materialized_values%0#0 (copy)"
      ]
    },
    "645": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%11#0",
        "materialized_values%0#0"
      ]
    },
    "646": {
      "op": "itob",
      "defined_out": [
        "tmp%11#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%13#0"
      ]
    },
    "647": {
      "op": "pushbytes 0x64616f5f",
      "defined_out": [
        "0x64616f5f",
        "tmp%11#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "tmp%13#0",
        "0x64616f5f"
      ]
    },
    "653": {
      "op": "swap",
      "stack_out": [
        "tmp%11#0",
        "0x64616f5f",
        "tmp%13#0"
      ]
    },
    "654": {
      "op": "concat",
      "defined_out": [
        "dao_id_bytes#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0"
      ]
    },
    "655": {
      "op": "frame_dig -5",
      "defined_out": [
        "dao_id_bytes#0",
        "min_members#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "min_members#0 (copy)"
      ]
    },
    "657": {
      "op": "itob",
      "defined_out": [
        "dao_id_bytes#0",
        "tmp%11#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "val_as_bytes%0#0"
      ]
    },
    "658": {
      "op": "frame_dig -4",
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "val_as_bytes%0#0",
        "min_stake#0 (copy)"
      ]
    },
    "660": {
      "op": "itob",
      "defined_out": [
        "dao_id_bytes#0",
        "tmp%11#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "661": {
      "op": "frame_dig -3",
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "voting_period#0 (copy)"
      ]
    },
    "663": {
      "op": "itob",
      "defined_out": [
        "dao_id_bytes#0",
        "tmp%11#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ]
    },
    "664": {
      "op": "frame_dig -2",
      "defined_out": [
        "activation_threshold#0 (copy)",
        "dao_id_bytes#0",
        "tmp%11#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "activation_threshold#0 (copy)"
      ]
    },
    "666": {
      "op": "itob",
      "defined_out": [
        "dao_id_bytes#0",
        "tmp%11#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ]
    },
    "667": {
      "op": "txn Sender",
      "defined_out": [
        "dao_id_bytes#0",
        "tmp%11#0",
        "tmp%14#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%14#0"
      ]
    },
    "669": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "val_as_bytes%1#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%14#0",
        "val_as_bytes%0#0"
      ]
    },
    "671": {
      "op": "uncover 4",
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%14#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "673": {
      "op": "concat",
      "defined_out": [
        "dao_id_bytes#0",
        "encoded_tuple_buffer%2#0",
        "tmp%11#0",
        "tmp%14#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "val_as_bytes%2#0",
        "val_as_bytes%3#0",
        "tmp%14#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "674": {
      "op": "uncover 3",
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "val_as_bytes%3#0",
        "tmp%14#0",
        "encoded_tuple_buffer%2#0",
        "val_as_bytes%2#0"
      ]
    },
    "676": {
      "op": "concat",
      "defined_out": [
        "dao_id_bytes#0",
        "encoded_tuple_buffer%3#0",
        "tmp%11#0",
        "tmp%14#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "val_as_bytes%3#0",
        "tmp%14#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "677": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "tmp%14#0",
        "encoded_tuple_buffer%3#0",
        "val_as_bytes%3#0"
      ]
    },
    "679": {
      "op": "concat",
      "defined_out": [
        "dao_id_bytes#0",
        "encoded_tuple_buffer%4#0",
        "tmp%11#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "tmp%14#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "680": {
      "op": "swap",
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "encoded_tuple_buffer%4#0",
        "tmp%14#0"
      ]
    },
    "681": {
      "op": "concat",
      "defined_out": [
        "dao_config#0",
        "dao_id_bytes#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "dao_config#0"
      ]
    },
    "682": {
      "op": "bytec_2 // 0x64616f5f636f6e6669675f",
      "defined_out": [
        "0x64616f5f636f6e6669675f",
        "dao_config#0",
        "dao_id_bytes#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "dao_config#0",
        "0x64616f5f636f6e6669675f"
      ]
    },
    "683": {
      "op": "dig 2",
      "defined_out": [
        "0x64616f5f636f6e6669675f",
        "dao_config#0",
        "dao_id_bytes#0",
        "dao_id_bytes#0 (copy)",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "dao_config#0",
        "0x64616f5f636f6e6669675f",
        "dao_id_bytes#0 (copy)"
      ]
    },
    "685": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "dao_id_bytes#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "dao_config#0",
        "box_prefixed_key%0#0"
      ]
    },
    "686": {
      "op": "swap",
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "box_prefixed_key%0#0",
        "dao_config#0"
      ]
    },
    "687": {
      "op": "box_put",
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0"
      ]
    },
    "688": {
      "op": "dup"
    },
    "689": {
      "op": "txn Sender",
      "defined_out": [
        "dao_id_bytes#0",
        "dao_id_bytes#0 (copy)",
        "tmp%11#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "dao_id_bytes#0 (copy)",
        "tmp%15#0"
      ]
    },
    "691": {
      "op": "concat",
      "defined_out": [
        "dao_id_bytes#0",
        "member_key#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "member_key#0"
      ]
    },
    "692": {
      "op": "bytec_1 // 0x7374616b655f",
      "defined_out": [
        "0x7374616b655f",
        "dao_id_bytes#0",
        "member_key#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "member_key#0",
        "0x7374616b655f"
      ]
    },
    "693": {
      "op": "swap",
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "0x7374616b655f",
        "member_key#0"
      ]
    },
    "694": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0",
        "dao_id_bytes#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "dao_id_bytes#0",
        "box_prefixed_key%1#0"
      ]
    },
    "695": {
      "op": "uncover 2",
      "stack_out": [
        "dao_id_bytes#0",
        "box_prefixed_key%1#0",
        "tmp%11#0"
      ]
    },
    "697": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%1#0",
        "dao_id_bytes#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "dao_id_bytes#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0"
      ]
    },
    "698": {
      "op": "swap",
      "stack_out": [
        "dao_id_bytes#0",
        "encoded_value%0#0",
        "box_prefixed_key%1#0"
      ]
    },
    "699": {
      "op": "dig 1",
      "defined_out": [
        "box_prefixed_key%1#0",
        "dao_id_bytes#0",
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)"
      ],
      "stack_out": [
        "dao_id_bytes#0",
        "encoded_value%0#0",
        "box_prefixed_key%1#0",
        "encoded_value%0#0 (copy)"
      ]
    },
    "701": {
      "op": "box_put",
      "stack_out": [
        "dao_id_bytes#0",
        "encoded_value%0#0"
      ]
    },
    "702": {
      "op": "bytec_3 // 0x74726561737572795f",
      "defined_out": [
        "0x74726561737572795f",
        "dao_id_bytes#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "dao_id_bytes#0",
        "encoded_value%0#0",
        "0x74726561737572795f"
      ]
    },
    "703": {
      "op": "dig 2",
      "stack_out": [
        "dao_id_bytes#0",
        "encoded_value%0#0",
        "0x74726561737572795f",
        "dao_id_bytes#0 (copy)"
      ]
    },
    "705": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%2#0",
        "dao_id_bytes#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "dao_id_bytes#0",
        "encoded_value%0#0",
        "box_prefixed_key%2#0"
      ]
    },
    "706": {
      "op": "swap",
      "stack_out": [
        "dao_id_bytes#0",
        "box_prefixed_key%2#0",
        "encoded_value%0#0"
      ]
    },
    "707": {
      "op": "box_put",
      "stack_out": [
        "dao_id_bytes#0"
      ]
    },
    "708": {
      "retsub": true,
      "op": "retsub"
    },
    "709": {
      "block": "create_dao_proposal_bool_false@3",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "710": {
      "op": "b create_dao_proposal_bool_merge@4"
    },
    "713": {
      "subroutine": "smart_contracts.citadel_dao.contract.CitadelDAO.join_dao",
      "params": {
        "dao_id#0": "bytes",
        "payment_txn#0": "uint64"
      },
      "block": "join_dao",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "716": {
      "op": "bytec_2 // 0x64616f5f636f6e6669675f",
      "defined_out": [
        "0x64616f5f636f6e6669675f"
      ],
      "stack_out": [
        "0x64616f5f636f6e6669675f"
      ]
    },
    "717": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x64616f5f636f6e6669675f",
        "dao_id#0 (copy)"
      ],
      "stack_out": [
        "0x64616f5f636f6e6669675f",
        "dao_id#0 (copy)"
      ]
    },
    "719": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "720": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "721": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "722": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "724": {
      "error": "DAO does not exist",
      "op": "assert // DAO does not exist",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "725": {
      "op": "box_get",
      "defined_out": [
        "dao_config#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "dao_config#0",
        "maybe_exists%1#0"
      ]
    },
    "726": {
      "error": "check self.dao_configs entry exists",
      "op": "assert // check self.dao_configs entry exists",
      "stack_out": [
        "dao_config#0"
      ]
    },
    "727": {
      "op": "frame_dig -1",
      "defined_out": [
        "dao_config#0",
        "payment_txn#0 (copy)"
      ],
      "stack_out": [
        "dao_config#0",
        "payment_txn#0 (copy)"
      ]
    },
    "729": {
      "op": "gtxns Receiver",
      "defined_out": [
        "dao_config#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "dao_config#0",
        "tmp%0#0"
      ]
    },
    "731": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "dao_config#0",
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "dao_config#0",
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "733": {
      "op": "==",
      "defined_out": [
        "dao_config#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "dao_config#0",
        "tmp%2#0"
      ]
    },
    "734": {
      "error": "Payment must be to contract",
      "op": "assert // Payment must be to contract",
      "stack_out": [
        "dao_config#0"
      ]
    },
    "735": {
      "op": "frame_dig -1",
      "stack_out": [
        "dao_config#0",
        "payment_txn#0 (copy)"
      ]
    },
    "737": {
      "op": "gtxns Sender",
      "defined_out": [
        "dao_config#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "dao_config#0",
        "tmp%3#0"
      ]
    },
    "739": {
      "op": "txn Sender",
      "defined_out": [
        "dao_config#0",
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "dao_config#0",
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "741": {
      "op": "==",
      "defined_out": [
        "dao_config#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "dao_config#0",
        "tmp%5#0"
      ]
    },
    "742": {
      "error": "Payment sender must match transaction sender",
      "op": "assert // Payment sender must match transaction sender",
      "stack_out": [
        "dao_config#0"
      ]
    },
    "743": {
      "op": "frame_dig -1",
      "stack_out": [
        "dao_config#0",
        "payment_txn#0 (copy)"
      ]
    },
    "745": {
      "op": "gtxns Amount",
      "defined_out": [
        "dao_config#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "dao_config#0",
        "tmp%6#0"
      ]
    },
    "747": {
      "op": "swap",
      "stack_out": [
        "tmp%6#0",
        "dao_config#0"
      ]
    },
    "748": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "dao_config#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "dao_config#0",
        "8"
      ]
    },
    "750": {
      "op": "extract_uint64",
      "defined_out": [
        "tmp%6#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "751": {
      "op": "dig 1",
      "defined_out": [
        "tmp%6#0",
        "tmp%6#0 (copy)",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%8#0",
        "tmp%6#0 (copy)"
      ]
    },
    "753": {
      "op": "<=",
      "defined_out": [
        "tmp%6#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%9#0"
      ]
    },
    "754": {
      "error": "Payment must meet minimum stake",
      "op": "assert // Payment must meet minimum stake",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "755": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%6#0",
        "dao_id#0 (copy)"
      ]
    },
    "757": {
      "op": "txn Sender",
      "defined_out": [
        "dao_id#0 (copy)",
        "tmp%10#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "dao_id#0 (copy)",
        "tmp%10#0"
      ]
    },
    "759": {
      "op": "concat",
      "defined_out": [
        "member_key#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "member_key#0"
      ]
    },
    "760": {
      "op": "bytec_1 // 0x7374616b655f",
      "defined_out": [
        "0x7374616b655f",
        "member_key#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "member_key#0",
        "0x7374616b655f"
      ]
    },
    "761": {
      "op": "swap",
      "stack_out": [
        "tmp%6#0",
        "0x7374616b655f",
        "member_key#0"
      ]
    },
    "762": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "box_prefixed_key%2#0"
      ]
    },
    "763": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "box_prefixed_key%2#0",
        "box_prefixed_key%2#0 (copy)"
      ]
    },
    "764": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%2#0",
        "is_member#0",
        "maybe_value%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "box_prefixed_key%2#0",
        "maybe_value%1#0",
        "is_member#0"
      ]
    },
    "765": {
      "op": "bury 1",
      "stack_out": [
        "tmp%6#0",
        "box_prefixed_key%2#0",
        "is_member#0"
      ]
    },
    "767": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%2#0",
        "tmp%11#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "box_prefixed_key%2#0",
        "tmp%11#0"
      ]
    },
    "768": {
      "error": "Already a member of this DAO",
      "op": "assert // Already a member of this DAO",
      "stack_out": [
        "tmp%6#0",
        "box_prefixed_key%2#0"
      ]
    },
    "769": {
      "op": "dig 1",
      "stack_out": [
        "tmp%6#0",
        "box_prefixed_key%2#0",
        "tmp%6#0 (copy)"
      ]
    },
    "771": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%2#0",
        "encoded_value%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "box_prefixed_key%2#0",
        "encoded_value%0#0"
      ]
    },
    "772": {
      "op": "box_put",
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "773": {
      "op": "bytec_3 // 0x74726561737572795f",
      "defined_out": [
        "0x74726561737572795f",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0x74726561737572795f"
      ]
    },
    "774": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%6#0",
        "0x74726561737572795f",
        "dao_id#0 (copy)"
      ]
    },
    "776": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%4#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "box_prefixed_key%4#0"
      ]
    },
    "777": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%4#0",
        "box_prefixed_key%4#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "box_prefixed_key%4#0",
        "box_prefixed_key%4#0 (copy)"
      ]
    },
    "778": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%4#0",
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "box_prefixed_key%4#0",
        "maybe_value%2#0",
        "maybe_exists%3#0"
      ]
    },
    "779": {
      "error": "check self.treasury_balances entry exists",
      "op": "assert // check self.treasury_balances entry exists",
      "stack_out": [
        "tmp%6#0",
        "box_prefixed_key%4#0",
        "maybe_value%2#0"
      ]
    },
    "780": {
      "op": "btoi",
      "defined_out": [
        "box_prefixed_key%4#0",
        "current_treasury#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "box_prefixed_key%4#0",
        "current_treasury#0"
      ]
    },
    "781": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%4#0",
        "current_treasury#0",
        "tmp%6#0"
      ]
    },
    "783": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%4#0",
        "materialized_values%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%4#0",
        "materialized_values%1#0"
      ]
    },
    "784": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%4#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%4#0",
        "encoded_value%1#0"
      ]
    },
    "785": {
      "op": "box_put",
      "stack_out": []
    },
    "786": {
      "op": "pushbytes \"Successfully joined DAO: \"",
      "defined_out": [
        "\"Successfully joined DAO: \""
      ],
      "stack_out": [
        "\"Successfully joined DAO: \""
      ]
    },
    "813": {
      "op": "frame_dig -2",
      "stack_out": [
        "\"Successfully joined DAO: \"",
        "dao_id#0 (copy)"
      ]
    },
    "815": {
      "op": "concat",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "816": {
      "retsub": true,
      "op": "retsub"
    },
    "817": {
      "subroutine": "smart_contracts.citadel_dao.contract.CitadelDAO.create_proposal",
      "params": {
        "dao_id#0": "bytes",
        "proposal_title#0": "bytes",
        "proposal_description#0": "bytes",
        "moderator_category#0": "bytes"
      },
      "block": "create_proposal",
      "stack_in": [],
      "op": "proto 4 1"
    },
    "820": {
      "op": "bytec_2 // 0x64616f5f636f6e6669675f",
      "defined_out": [
        "0x64616f5f636f6e6669675f"
      ],
      "stack_out": [
        "0x64616f5f636f6e6669675f"
      ]
    },
    "821": {
      "op": "frame_dig -4",
      "defined_out": [
        "0x64616f5f636f6e6669675f",
        "dao_id#0 (copy)"
      ],
      "stack_out": [
        "0x64616f5f636f6e6669675f",
        "dao_id#0 (copy)"
      ]
    },
    "823": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "824": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "825": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "826": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "828": {
      "error": "DAO does not exist",
      "op": "assert // DAO does not exist",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "829": {
      "op": "box_get",
      "defined_out": [
        "dao_config#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "dao_config#0",
        "maybe_exists%1#0"
      ]
    },
    "830": {
      "error": "check self.dao_configs entry exists",
      "op": "assert // check self.dao_configs entry exists",
      "stack_out": [
        "dao_config#0"
      ]
    },
    "831": {
      "op": "frame_dig -4",
      "stack_out": [
        "dao_config#0",
        "dao_id#0 (copy)"
      ]
    },
    "833": {
      "op": "txn Sender",
      "defined_out": [
        "dao_config#0",
        "dao_id#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "dao_config#0",
        "dao_id#0 (copy)",
        "tmp%0#0"
      ]
    },
    "835": {
      "op": "concat",
      "defined_out": [
        "dao_config#0",
        "member_key#0"
      ],
      "stack_out": [
        "dao_config#0",
        "member_key#0"
      ]
    },
    "836": {
      "op": "bytec_1 // 0x7374616b655f",
      "defined_out": [
        "0x7374616b655f",
        "dao_config#0",
        "member_key#0"
      ],
      "stack_out": [
        "dao_config#0",
        "member_key#0",
        "0x7374616b655f"
      ]
    },
    "837": {
      "op": "swap",
      "stack_out": [
        "dao_config#0",
        "0x7374616b655f",
        "member_key#0"
      ]
    },
    "838": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%2#0",
        "dao_config#0"
      ],
      "stack_out": [
        "dao_config#0",
        "box_prefixed_key%2#0"
      ]
    },
    "839": {
      "op": "box_get",
      "defined_out": [
        "dao_config#0",
        "is_member#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "dao_config#0",
        "maybe_value%1#0",
        "is_member#0"
      ]
    },
    "840": {
      "op": "bury 1",
      "stack_out": [
        "dao_config#0",
        "is_member#0"
      ]
    },
    "842": {
      "error": "Only DAO members can create proposals",
      "op": "assert // Only DAO members can create proposals",
      "stack_out": [
        "dao_config#0"
      ]
    },
    "843": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "dao_config#0"
      ],
      "stack_out": [
        "dao_config#0",
        "0"
      ]
    },
    "844": {
      "op": "bytec 6 // \"proposal_counter\"",
      "defined_out": [
        "\"proposal_counter\"",
        "0",
        "dao_config#0"
      ],
      "stack_out": [
        "dao_config#0",
        "0",
        "\"proposal_counter\""
      ]
    },
    "846": {
      "op": "app_global_get_ex",
      "defined_out": [
        "dao_config#0",
        "maybe_exists%3#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "dao_config#0",
        "maybe_value%2#0",
        "maybe_exists%3#0"
      ]
    },
    "847": {
      "error": "check self.proposal_counter exists",
      "op": "assert // check self.proposal_counter exists",
      "stack_out": [
        "dao_config#0",
        "maybe_value%2#0"
      ]
    },
    "848": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "dao_config#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "dao_config#0",
        "maybe_value%2#0",
        "1"
      ]
    },
    "849": {
      "op": "+",
      "defined_out": [
        "dao_config#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "dao_config#0",
        "materialized_values%0#0"
      ]
    },
    "850": {
      "op": "bytec 6 // \"proposal_counter\"",
      "stack_out": [
        "dao_config#0",
        "materialized_values%0#0",
        "\"proposal_counter\""
      ]
    },
    "852": {
      "op": "dig 1",
      "defined_out": [
        "\"proposal_counter\"",
        "dao_config#0",
        "materialized_values%0#0",
        "materialized_values%0#0 (copy)"
      ],
      "stack_out": [
        "dao_config#0",
        "materialized_values%0#0",
        "\"proposal_counter\"",
        "materialized_values%0#0 (copy)"
      ]
    },
    "854": {
      "op": "app_global_put",
      "stack_out": [
        "dao_config#0",
        "materialized_values%0#0"
      ]
    },
    "855": {
      "op": "itob",
      "defined_out": [
        "dao_config#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "dao_config#0",
        "tmp%1#0"
      ]
    },
    "856": {
      "op": "pushbytes 0x70726f705f",
      "defined_out": [
        "0x70726f705f",
        "dao_config#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "dao_config#0",
        "tmp%1#0",
        "0x70726f705f"
      ]
    },
    "863": {
      "op": "swap",
      "stack_out": [
        "dao_config#0",
        "0x70726f705f",
        "tmp%1#0"
      ]
    },
    "864": {
      "op": "concat",
      "defined_out": [
        "dao_config#0",
        "proposal_id_bytes#0"
      ],
      "stack_out": [
        "dao_config#0",
        "proposal_id_bytes#0"
      ]
    },
    "865": {
      "op": "dig 1",
      "defined_out": [
        "dao_config#0",
        "dao_config#0 (copy)",
        "proposal_id_bytes#0"
      ],
      "stack_out": [
        "dao_config#0",
        "proposal_id_bytes#0",
        "dao_config#0 (copy)"
      ]
    },
    "867": {
      "op": "intc_1 // 0",
      "stack_out": [
        "dao_config#0",
        "proposal_id_bytes#0",
        "dao_config#0 (copy)",
        "0"
      ]
    },
    "868": {
      "op": "extract_uint64",
      "defined_out": [
        "dao_config#0",
        "proposal_id_bytes#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "dao_config#0",
        "proposal_id_bytes#0",
        "tmp%3#0"
      ]
    },
    "869": {
      "op": "uncover 2",
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%3#0",
        "dao_config#0"
      ]
    },
    "871": {
      "op": "pushint 24 // 24",
      "defined_out": [
        "24",
        "dao_config#0",
        "proposal_id_bytes#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%3#0",
        "dao_config#0",
        "24"
      ]
    },
    "873": {
      "op": "extract_uint64",
      "defined_out": [
        "proposal_id_bytes#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "874": {
      "op": "*",
      "defined_out": [
        "proposal_id_bytes#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%6#0"
      ]
    },
    "875": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "proposal_id_bytes#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%6#0",
        "100"
      ]
    },
    "877": {
      "op": "/",
      "defined_out": [
        "proposal_id_bytes#0",
        "required_votes#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "required_votes#0"
      ]
    },
    "878": {
      "op": "txn Sender",
      "defined_out": [
        "proposal_id_bytes#0",
        "required_votes#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "required_votes#0",
        "tmp%7#0"
      ]
    },
    "880": {
      "op": "swap",
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "required_votes#0"
      ]
    },
    "881": {
      "op": "itob",
      "defined_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0"
      ]
    },
    "882": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "to_encode%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "to_encode%0#0"
      ]
    },
    "884": {
      "op": "itob",
      "defined_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "885": {
      "op": "frame_dig -4",
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "dao_id#0 (copy)"
      ]
    },
    "887": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "data_length%0#0"
      ]
    },
    "888": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "64",
        "data_length%0#0",
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "data_length%0#0",
        "64"
      ]
    },
    "890": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "current_tail_offset%1#0"
      ]
    },
    "891": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)",
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)"
      ]
    },
    "892": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "current_tail_offset%1#0",
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "current_tail_offset%1#0",
        "as_bytes%1#0"
      ]
    },
    "893": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0"
      ]
    },
    "896": {
      "op": "pushbytes 0x0040",
      "defined_out": [
        "0x0040",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "0x0040"
      ]
    },
    "900": {
      "op": "swap",
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "current_tail_offset%1#0",
        "0x0040",
        "offset_as_uint16%1#0"
      ]
    },
    "901": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "902": {
      "op": "frame_dig -3",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "proposal_id_bytes#0",
        "proposal_title#0 (copy)",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "proposal_title#0 (copy)"
      ]
    },
    "904": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%1#0",
        "data_length%1#0",
        "encoded_tuple_buffer%2#0",
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%1#0"
      ]
    },
    "905": {
      "op": "uncover 2",
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%1#0",
        "current_tail_offset%1#0"
      ]
    },
    "907": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0"
      ]
    },
    "908": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%2#0",
        "current_tail_offset%2#0 (copy)",
        "encoded_tuple_buffer%2#0",
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0",
        "current_tail_offset%2#0 (copy)"
      ]
    },
    "909": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0",
        "as_bytes%2#0"
      ]
    },
    "910": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%2#0",
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0",
        "offset_as_uint16%2#0"
      ]
    },
    "913": {
      "op": "uncover 2",
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "current_tail_offset%2#0",
        "offset_as_uint16%2#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "915": {
      "op": "swap",
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%2#0"
      ]
    },
    "916": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "917": {
      "op": "frame_dig -2",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "proposal_description#0 (copy)",
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "proposal_description#0 (copy)"
      ]
    },
    "919": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%2#0",
        "data_length%2#0",
        "encoded_tuple_buffer%3#0",
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "data_length%2#0"
      ]
    },
    "920": {
      "op": "uncover 2",
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%3#0",
        "data_length%2#0",
        "current_tail_offset%2#0"
      ]
    },
    "922": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%3#0",
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%3#0",
        "current_tail_offset%3#0"
      ]
    },
    "923": {
      "op": "swap",
      "stack_out": [
        "proposal_id_bytes#0",
        "tmp%7#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "924": {
      "op": "uncover 4",
      "stack_out": [
        "proposal_id_bytes#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%3#0",
        "tmp%7#0"
      ]
    },
    "926": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%4#0",
        "proposal_id_bytes#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "927": {
      "op": "uncover 3",
      "stack_out": [
        "proposal_id_bytes#0",
        "val_as_bytes%1#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%4#0",
        "val_as_bytes%0#0"
      ]
    },
    "929": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%5#0",
        "proposal_id_bytes#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "val_as_bytes%1#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "930": {
      "op": "pushbytes 0x0000000000000000",
      "defined_out": [
        "0x0000000000000000",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%5#0",
        "proposal_id_bytes#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "val_as_bytes%1#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%5#0",
        "0x0000000000000000"
      ]
    },
    "940": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%6#0",
        "proposal_id_bytes#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "val_as_bytes%1#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "941": {
      "op": "swap",
      "stack_out": [
        "proposal_id_bytes#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "current_tail_offset%3#0"
      ]
    },
    "942": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "encoded_tuple_buffer%6#0",
        "proposal_id_bytes#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "as_bytes%3#0"
      ]
    },
    "943": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "offset_as_uint16%3#0",
        "proposal_id_bytes#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%6#0",
        "offset_as_uint16%3#0"
      ]
    },
    "946": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "proposal_id_bytes#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "val_as_bytes%1#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "947": {
      "op": "swap",
      "stack_out": [
        "proposal_id_bytes#0",
        "encoded_tuple_buffer%7#0",
        "val_as_bytes%1#0"
      ]
    },
    "948": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "proposal_id_bytes#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "949": {
      "op": "frame_dig -4",
      "stack_out": [
        "proposal_id_bytes#0",
        "encoded_tuple_buffer%8#0",
        "dao_id#0 (copy)"
      ]
    },
    "951": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "proposal_id_bytes#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "952": {
      "op": "frame_dig -3",
      "stack_out": [
        "proposal_id_bytes#0",
        "encoded_tuple_buffer%9#0",
        "proposal_title#0 (copy)"
      ]
    },
    "954": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "proposal_id_bytes#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "955": {
      "op": "frame_dig -2",
      "stack_out": [
        "proposal_id_bytes#0",
        "encoded_tuple_buffer%10#0",
        "proposal_description#0 (copy)"
      ]
    },
    "957": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "proposal_id_bytes#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "958": {
      "op": "bytec 7 // 0x616374697665",
      "defined_out": [
        "0x616374697665",
        "encoded_tuple_buffer%11#0",
        "proposal_id_bytes#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "encoded_tuple_buffer%11#0",
        "0x616374697665"
      ]
    },
    "960": {
      "op": "concat",
      "defined_out": [
        "proposal_data#0",
        "proposal_id_bytes#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "proposal_data#0"
      ]
    },
    "961": {
      "op": "bytec 4 // 0x70726f706f73616c5f",
      "defined_out": [
        "0x70726f706f73616c5f",
        "proposal_data#0",
        "proposal_id_bytes#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "proposal_data#0",
        "0x70726f706f73616c5f"
      ]
    },
    "963": {
      "op": "dig 2",
      "defined_out": [
        "0x70726f706f73616c5f",
        "proposal_data#0",
        "proposal_id_bytes#0",
        "proposal_id_bytes#0 (copy)"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "proposal_data#0",
        "0x70726f706f73616c5f",
        "proposal_id_bytes#0 (copy)"
      ]
    },
    "965": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%3#0",
        "proposal_data#0",
        "proposal_id_bytes#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "proposal_data#0",
        "box_prefixed_key%3#0"
      ]
    },
    "966": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%3#0",
        "box_prefixed_key%3#0 (copy)",
        "proposal_data#0",
        "proposal_id_bytes#0"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "proposal_data#0",
        "box_prefixed_key%3#0",
        "box_prefixed_key%3#0 (copy)"
      ]
    },
    "967": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%3#0",
        "proposal_data#0",
        "proposal_id_bytes#0",
        "{box_del}"
      ],
      "stack_out": [
        "proposal_id_bytes#0",
        "proposal_data#0",
        "box_prefixed_key%3#0",
        "{box_del}"
      ]
    },
    "968": {
      "op": "pop",
      "stack_out": [
        "proposal_id_bytes#0",
        "proposal_data#0",
        "box_prefixed_key%3#0"
      ]
    },
    "969": {
      "op": "swap",
      "stack_out": [
        "proposal_id_bytes#0",
        "box_prefixed_key%3#0",
        "proposal_data#0"
      ]
    },
    "970": {
      "op": "box_put",
      "stack_out": [
        "proposal_id_bytes#0"
      ]
    },
    "971": {
      "retsub": true,
      "op": "retsub"
    },
    "972": {
      "subroutine": "smart_contracts.citadel_dao.contract.CitadelDAO.vote_on_proposal",
      "params": {
        "proposal_id#0": "bytes",
        "vote_yes#0": "bytes"
      },
      "block": "vote_on_proposal",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "975": {
      "op": "bytec 4 // 0x70726f706f73616c5f",
      "defined_out": [
        "0x70726f706f73616c5f"
      ],
      "stack_out": [
        "0x70726f706f73616c5f"
      ]
    },
    "977": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x70726f706f73616c5f",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "0x70726f706f73616c5f",
        "proposal_id#0 (copy)"
      ]
    },
    "979": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "980": {
      "op": "dupn 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "982": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "983": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "985": {
      "error": "Proposal does not exist",
      "op": "assert // Proposal does not exist",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "986": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "maybe_exists%1#0"
      ]
    },
    "987": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "proposal_data#0"
      ]
    },
    "988": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ]
    },
    "989": {
      "op": "uncover 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "maybe_exists%1#0"
      ]
    },
    "991": {
      "error": "check self.proposals entry exists",
      "op": "assert // check self.proposals entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0"
      ]
    },
    "992": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ]
    },
    "993": {
      "op": "intc_3 // 54",
      "defined_out": [
        "54",
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "proposal_data#0 (copy)",
        "54"
      ]
    },
    "994": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "item_start_offset%0#0"
      ]
    },
    "995": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "proposal_data#0 (copy)"
      ]
    },
    "997": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "998": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1000": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "proposal_data#0 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1002": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "tmp%0#0"
      ]
    },
    "1003": {
      "op": "bytec 7 // 0x616374697665",
      "defined_out": [
        "0x616374697665",
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "tmp%0#0",
        "0x616374697665"
      ]
    },
    "1005": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "tmp%1#0"
      ]
    },
    "1006": {
      "error": "Proposal is not active",
      "op": "assert // Proposal is not active",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0"
      ]
    },
    "1007": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1008": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "proposal_data#0 (copy)",
        "0"
      ]
    },
    "1009": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%1#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "item_start_offset%1#0"
      ]
    },
    "1010": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "item_start_offset%1#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1012": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "box_prefixed_key%0#0",
        "item_start_offset%1#0",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "item_start_offset%1#0",
        "proposal_data#0 (copy)",
        "2"
      ]
    },
    "1013": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "1014": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1016": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "proposal_data#0 (copy)",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "1018": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dao_id_bytes#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "dao_id_bytes#0"
      ]
    },
    "1019": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dao_id_bytes#0",
        "proposal_data#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "dao_id_bytes#0",
        "tmp%2#0"
      ]
    },
    "1021": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "member_key#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "member_key#0"
      ]
    },
    "1022": {
      "op": "bytec_1 // 0x7374616b655f",
      "defined_out": [
        "0x7374616b655f",
        "box_prefixed_key%0#0",
        "member_key#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "member_key#0",
        "0x7374616b655f"
      ]
    },
    "1023": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "0x7374616b655f",
        "member_key#0"
      ]
    },
    "1024": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "box_prefixed_key%2#0"
      ]
    },
    "1025": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "is_member#0",
        "maybe_value%1#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "maybe_value%1#0",
        "is_member#0"
      ]
    },
    "1026": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "is_member#0"
      ]
    },
    "1028": {
      "error": "Only DAO members can vote",
      "op": "assert // Only DAO members can vote",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0"
      ]
    },
    "1029": {
      "op": "frame_dig -2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "proposal_id#0 (copy)"
      ]
    },
    "1031": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_id#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "proposal_id#0 (copy)",
        "tmp%3#0"
      ]
    },
    "1033": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "vote_key#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "vote_key#0"
      ]
    },
    "1034": {
      "op": "pushbytes 0x766f74655f",
      "defined_out": [
        "0x766f74655f",
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "vote_key#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "vote_key#0",
        "0x766f74655f"
      ]
    },
    "1041": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "0x766f74655f",
        "vote_key#0"
      ]
    },
    "1042": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "box_prefixed_key%3#0"
      ]
    },
    "1043": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "box_prefixed_key%3#0 (copy)",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "box_prefixed_key%3#0",
        "box_prefixed_key%3#0 (copy)"
      ]
    },
    "1044": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "has_voted#0",
        "maybe_value%2#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "box_prefixed_key%3#0",
        "maybe_value%2#0",
        "has_voted#0"
      ]
    },
    "1045": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "box_prefixed_key%3#0",
        "has_voted#0"
      ]
    },
    "1047": {
      "op": "!",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "proposal_data#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "box_prefixed_key%3#0",
        "tmp%4#0"
      ]
    },
    "1048": {
      "error": "Already voted on this proposal",
      "op": "assert // Already voted on this proposal",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "box_prefixed_key%3#0"
      ]
    },
    "1049": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "proposal_data#0",
        "vote_yes#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "box_prefixed_key%3#0",
        "vote_yes#0 (copy)"
      ]
    },
    "1051": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "proposal_data#0",
        "vote_yes#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "box_prefixed_key%3#0",
        "vote_yes#0 (copy)",
        "0x00"
      ]
    },
    "1054": {
      "op": "!=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "proposal_data#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "box_prefixed_key%3#0",
        "tmp%5#0"
      ]
    },
    "1055": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0",
        "box_prefixed_key%3#0",
        "tmp%5#0",
        "tmp%5#0"
      ]
    },
    "1056": {
      "op": "cover 3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "proposal_data#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#0",
        "box_prefixed_key%3#0",
        "tmp%5#0"
      ]
    },
    "1058": {
      "op": "intc_2 // 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#0",
        "box_prefixed_key%3#0",
        "tmp%5#0",
        "2"
      ]
    },
    "1059": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "2",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "proposal_data#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#0",
        "box_prefixed_key%3#0",
        "tmp%5#0",
        "2",
        "1"
      ]
    },
    "1060": {
      "op": "dig 2",
      "defined_out": [
        "1",
        "2",
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "proposal_data#0",
        "tmp%5#0",
        "tmp%5#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#0",
        "box_prefixed_key%3#0",
        "tmp%5#0",
        "2",
        "1",
        "tmp%5#0 (copy)"
      ]
    },
    "1062": {
      "op": "select",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "proposal_data#0",
        "tmp%5#0",
        "vote_value#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#0",
        "box_prefixed_key%3#0",
        "tmp%5#0",
        "vote_value#0"
      ]
    },
    "1063": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0",
        "proposal_data#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#0",
        "box_prefixed_key%3#0",
        "tmp%5#0",
        "encoded_value%0#0"
      ]
    },
    "1064": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#0",
        "tmp%5#0",
        "encoded_value%0#0",
        "box_prefixed_key%3#0"
      ]
    },
    "1066": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#0",
        "tmp%5#0",
        "box_prefixed_key%3#0",
        "encoded_value%0#0"
      ]
    },
    "1067": {
      "op": "box_put",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#7",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "tmp%5#0"
      ]
    },
    "1068": {
      "op": "bz vote_on_proposal_after_if_else@4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7"
      ]
    },
    "1071": {
      "op": "frame_dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0"
      ]
    },
    "1073": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1074": {
      "op": "pushint 46 // 46",
      "defined_out": [
        "46",
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0 (copy)",
        "proposal_data#7",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "proposal_data#0 (copy)",
        "46"
      ]
    },
    "1076": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#7",
        "tmp%5#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "tmp%8#0"
      ]
    },
    "1077": {
      "op": "intc_0 // 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "tmp%8#0",
        "1"
      ]
    },
    "1078": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#7",
        "tmp%5#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "to_encode%0#0"
      ]
    },
    "1079": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#7",
        "tmp%5#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "val_as_bytes%0#0"
      ]
    },
    "1080": {
      "op": "replace2 46",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0"
      ]
    },
    "1082": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "proposal_data#0"
      ]
    },
    "1083": {
      "op": "frame_bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0"
      ]
    },
    "1085": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1086": {
      "op": "pushint 46 // 46",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "proposal_data#0 (copy)",
        "46"
      ]
    },
    "1088": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#7",
        "tmp%10#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "tmp%10#0"
      ]
    },
    "1089": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "tmp%10#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1091": {
      "op": "pushint 38 // 38",
      "defined_out": [
        "38",
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0 (copy)",
        "proposal_data#7",
        "tmp%10#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "tmp%10#0",
        "proposal_data#0 (copy)",
        "38"
      ]
    },
    "1093": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#7",
        "tmp%10#0",
        "tmp%12#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "1094": {
      "op": ">=",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#7",
        "tmp%13#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "tmp%13#0"
      ]
    },
    "1095": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "tmp%13#0",
        "proposal_data#7"
      ]
    },
    "1096": {
      "op": "frame_bury 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "tmp%13#0"
      ]
    },
    "1098": {
      "op": "bz vote_on_proposal_after_if_else@4",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7"
      ]
    },
    "1101": {
      "op": "frame_dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0"
      ]
    },
    "1103": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1104": {
      "op": "intc_3 // 54",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "proposal_data#0 (copy)",
        "54"
      ]
    },
    "1105": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_offset%0#0",
        "proposal_data#0",
        "proposal_data#7",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "item_offset%0#0"
      ]
    },
    "1106": {
      "op": "intc_1 // 0"
    },
    "1107": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "0",
        "item_offset%0#0"
      ]
    },
    "1108": {
      "op": "extract3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "data_up_to_item%0#0",
        "proposal_data#0",
        "proposal_data#7",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "data_up_to_item%0#0"
      ]
    },
    "1109": {
      "op": "bytec 8 // 0x706173736564",
      "defined_out": [
        "0x706173736564",
        "box_prefixed_key%0#0",
        "data_up_to_item%0#0",
        "proposal_data#0",
        "proposal_data#7",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "data_up_to_item%0#0",
        "0x706173736564"
      ]
    },
    "1111": {
      "op": "concat",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#7"
      ]
    },
    "1112": {
      "op": "frame_bury 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7"
      ]
    },
    "1114": {
      "block": "vote_on_proposal_after_if_else@4",
      "stack_in": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0"
      ]
    },
    "1116": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "proposal_data#0"
      ]
    },
    "1117": {
      "op": "frame_bury 1",
      "defined_out": [
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0"
      ]
    },
    "1119": {
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1121": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1122": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "box_prefixed_key%0#0",
        "{box_del}"
      ]
    },
    "1123": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "proposal_data#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1124": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "box_prefixed_key%0#0",
        "proposal_data#0"
      ]
    },
    "1125": {
      "op": "box_put",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7"
      ]
    },
    "1126": {
      "op": "frame_dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "tmp%5#0"
      ]
    },
    "1128": {
      "op": "bz vote_on_proposal_ternary_false@6",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7"
      ]
    },
    "1131": {
      "op": "pushbytes \"yes\"",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "vote_type#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "vote_type#0"
      ]
    },
    "1136": {
      "block": "vote_on_proposal_ternary_merge@7",
      "stack_in": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "vote_type#0"
      ],
      "op": "pushbytes \"Vote cast: \"",
      "defined_out": [
        "\"Vote cast: \""
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "vote_type#0",
        "\"Vote cast: \""
      ]
    },
    "1149": {
      "op": "swap",
      "defined_out": [
        "\"Vote cast: \"",
        "vote_type#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "\"Vote cast: \"",
        "vote_type#0"
      ]
    },
    "1150": {
      "op": "concat",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "tmp%15#0"
      ]
    },
    "1151": {
      "op": "pushbytes \", Total yes votes: \"",
      "defined_out": [
        "\", Total yes votes: \"",
        "tmp%15#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "tmp%15#0",
        "\", Total yes votes: \""
      ]
    },
    "1172": {
      "op": "concat",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "tmp%16#0"
      ]
    },
    "1173": {
      "op": "frame_dig 1",
      "defined_out": [
        "proposal_data#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "tmp%16#0",
        "proposal_data#0"
      ]
    },
    "1175": {
      "op": "pushint 46 // 46",
      "defined_out": [
        "46",
        "proposal_data#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "tmp%16#0",
        "proposal_data#0",
        "46"
      ]
    },
    "1177": {
      "op": "extract_uint64",
      "defined_out": [
        "proposal_data#0",
        "tmp%16#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "tmp%16#0",
        "tmp%18#0"
      ]
    },
    "1178": {
      "op": "itob",
      "defined_out": [
        "proposal_data#0",
        "tmp%16#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "tmp%16#0",
        "tmp%19#0"
      ]
    },
    "1179": {
      "op": "concat",
      "defined_out": [
        "proposal_data#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "tmp%20#0"
      ]
    },
    "1180": {
      "op": "frame_bury 0"
    },
    "1182": {
      "retsub": true,
      "op": "retsub"
    },
    "1183": {
      "block": "vote_on_proposal_ternary_false@6",
      "stack_in": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7"
      ],
      "op": "pushbytes \"no\"",
      "defined_out": [
        "vote_type#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#7",
        "vote_type#0"
      ]
    },
    "1187": {
      "op": "b vote_on_proposal_ternary_merge@7"
    },
    "1190": {
      "subroutine": "smart_contracts.citadel_dao.contract.CitadelDAO.execute_proposal",
      "params": {
        "proposal_id#0": "bytes",
        "moderator_name#0": "bytes"
      },
      "block": "execute_proposal",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1193": {
      "op": "bytec 4 // 0x70726f706f73616c5f",
      "defined_out": [
        "0x70726f706f73616c5f"
      ],
      "stack_out": [
        "0x70726f706f73616c5f"
      ]
    },
    "1195": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x70726f706f73616c5f",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "0x70726f706f73616c5f",
        "proposal_id#0 (copy)"
      ]
    },
    "1197": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1198": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1199": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1200": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1202": {
      "error": "Proposal does not exist",
      "op": "assert // Proposal does not exist",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1203": {
      "op": "dup",
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1204": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "maybe_exists%1#0"
      ]
    },
    "1205": {
      "error": "check self.proposals entry exists",
      "op": "assert // check self.proposals entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0"
      ]
    },
    "1206": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1207": {
      "op": "intc_3 // 54",
      "defined_out": [
        "54",
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0 (copy)",
        "54"
      ]
    },
    "1208": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0"
      ]
    },
    "1209": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1211": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1212": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1214": {
      "op": "dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "item_start_offset%0#0 (copy)",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "proposal_data#0 (copy)",
        "item_start_offset%0#0 (copy)"
      ]
    },
    "1216": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "proposal_data#0 (copy)",
        "item_start_offset%0#0 (copy)",
        "item_end_offset%0#0"
      ]
    },
    "1218": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "proposal_data#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "tmp%0#0"
      ]
    },
    "1219": {
      "op": "bytec 8 // 0x706173736564",
      "defined_out": [
        "0x706173736564",
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "proposal_data#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "tmp%0#0",
        "0x706173736564"
      ]
    },
    "1221": {
      "op": "==",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "proposal_data#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "tmp%1#0"
      ]
    },
    "1222": {
      "error": "Proposal has not passed",
      "op": "assert // Proposal has not passed",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0"
      ]
    },
    "1223": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1225": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "proposal_data#0 (copy)",
        "0"
      ]
    },
    "1226": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "item_start_offset%1#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "item_start_offset%1#0"
      ]
    },
    "1227": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "item_start_offset%1#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1229": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "item_start_offset%1#0",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "item_start_offset%1#0",
        "proposal_data#0 (copy)",
        "2"
      ]
    },
    "1230": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%1#0",
        "item_start_offset%0#0",
        "item_start_offset%1#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "1231": {
      "op": "dig 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1233": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "proposal_data#0 (copy)",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "1235": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dao_id_bytes#0",
        "item_start_offset%0#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "dao_id_bytes#0"
      ]
    },
    "1236": {
      "op": "txn Sender",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dao_id_bytes#0",
        "item_start_offset%0#0",
        "proposal_data#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "dao_id_bytes#0",
        "tmp%2#0"
      ]
    },
    "1238": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "member_key#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "member_key#0"
      ]
    },
    "1239": {
      "op": "bytec_1 // 0x7374616b655f",
      "defined_out": [
        "0x7374616b655f",
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "member_key#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "member_key#0",
        "0x7374616b655f"
      ]
    },
    "1240": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "0x7374616b655f",
        "member_key#0"
      ]
    },
    "1241": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "item_start_offset%0#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "box_prefixed_key%2#0"
      ]
    },
    "1242": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "is_member#0",
        "item_start_offset%0#0",
        "maybe_value%1#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "maybe_value%1#0",
        "is_member#0"
      ]
    },
    "1243": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "is_member#0"
      ]
    },
    "1245": {
      "error": "Only DAO members can execute proposals",
      "op": "assert // Only DAO members can execute proposals",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0"
      ]
    },
    "1246": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1248": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "proposal_data#0 (copy)",
        "4"
      ]
    },
    "1250": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "item_start_offset%2#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "item_start_offset%2#0"
      ]
    },
    "1251": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "item_start_offset%2#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1253": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "proposal_data#0 (copy)",
        "item_start_offset%2#0"
      ]
    },
    "1254": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "proposal_data#0 (copy)",
        "item_start_offset%2#0",
        "item_start_offset%0#0 (copy)"
      ]
    },
    "1256": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "description#0",
        "item_start_offset%0#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "description#0"
      ]
    },
    "1257": {
      "op": "itxn_begin"
    },
    "1258": {
      "op": "sha256",
      "defined_out": [
        "box_prefixed_key%0#0",
        "inner_txn_params%0%%param_ConfigAssetMetadataHash_idx_0#0",
        "item_start_offset%0#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "inner_txn_params%0%%param_ConfigAssetMetadataHash_idx_0#0"
      ]
    },
    "1259": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "box_prefixed_key%0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetMetadataHash_idx_0#0",
        "item_start_offset%0#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "inner_txn_params%0%%param_ConfigAssetMetadataHash_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "1261": {
      "op": "dupn 3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetMetadataHash_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "item_start_offset%0#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "inner_txn_params%0%%param_ConfigAssetMetadataHash_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "1263": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "inner_txn_params%0%%param_ConfigAssetMetadataHash_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "1265": {
      "op": "itxn_field ConfigAssetFreeze",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "inner_txn_params%0%%param_ConfigAssetMetadataHash_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ]
    },
    "1267": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "inner_txn_params%0%%param_ConfigAssetMetadataHash_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "1269": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "inner_txn_params%0%%param_ConfigAssetMetadataHash_idx_0#0"
      ]
    },
    "1271": {
      "op": "itxn_field ConfigAssetMetadataHash",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0"
      ]
    },
    "1273": {
      "op": "pushbytes 0x68747470733a2f2f6369746164656c782e61692f6d6f64657261746f722f",
      "defined_out": [
        "0x68747470733a2f2f6369746164656c782e61692f6d6f64657261746f722f",
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "0x68747470733a2f2f6369746164656c782e61692f6d6f64657261746f722f"
      ]
    },
    "1305": {
      "op": "itxn_field ConfigAssetURL",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0"
      ]
    },
    "1307": {
      "op": "pushbytes 0x4349544d4f44",
      "defined_out": [
        "0x4349544d4f44",
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "0x4349544d4f44"
      ]
    },
    "1315": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0"
      ]
    },
    "1317": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "moderator_name#0 (copy)",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "moderator_name#0 (copy)"
      ]
    },
    "1319": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0"
      ]
    },
    "1321": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "0"
      ]
    },
    "1322": {
      "op": "itxn_field ConfigAssetDefaultFrozen",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0"
      ]
    },
    "1324": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "0"
      ]
    },
    "1325": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0"
      ]
    },
    "1327": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "1"
      ]
    },
    "1328": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0"
      ]
    },
    "1330": {
      "op": "pushint 3 // acfg",
      "defined_out": [
        "acfg",
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "acfg"
      ]
    },
    "1332": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0"
      ]
    },
    "1334": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "0"
      ]
    },
    "1335": {
      "op": "itxn_field Fee",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0"
      ]
    },
    "1337": {
      "op": "itxn_submit"
    },
    "1338": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "nft_asset_id#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "nft_asset_id#0"
      ]
    },
    "1340": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "nft_asset_id#0",
        "proposal_data#0"
      ]
    },
    "1342": {
      "op": "intc_1 // 0",
      "stack_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "nft_asset_id#0",
        "proposal_data#0",
        "0"
      ]
    },
    "1343": {
      "op": "uncover 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "nft_asset_id#0",
        "proposal_data#0",
        "0",
        "item_start_offset%0#0"
      ]
    },
    "1345": {
      "op": "extract3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "data_up_to_item%0#0",
        "nft_asset_id#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "nft_asset_id#0",
        "data_up_to_item%0#0"
      ]
    },
    "1346": {
      "op": "pushbytes 0x6578656375746564",
      "defined_out": [
        "0x6578656375746564",
        "box_prefixed_key%0#0",
        "data_up_to_item%0#0",
        "nft_asset_id#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "nft_asset_id#0",
        "data_up_to_item%0#0",
        "0x6578656375746564"
      ]
    },
    "1356": {
      "op": "concat",
      "stack_out": [
        "box_prefixed_key%0#0",
        "nft_asset_id#0",
        "proposal_data#0"
      ]
    },
    "1357": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "nft_asset_id#0",
        "proposal_data#0",
        "box_prefixed_key%0#0 (copy)"
      ]
    },
    "1359": {
      "op": "box_del",
      "defined_out": [
        "box_prefixed_key%0#0",
        "nft_asset_id#0",
        "proposal_data#0",
        "{box_del}"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "nft_asset_id#0",
        "proposal_data#0",
        "{box_del}"
      ]
    },
    "1360": {
      "op": "pop",
      "stack_out": [
        "box_prefixed_key%0#0",
        "nft_asset_id#0",
        "proposal_data#0"
      ]
    },
    "1361": {
      "op": "uncover 2",
      "stack_out": [
        "nft_asset_id#0",
        "proposal_data#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1363": {
      "op": "swap",
      "stack_out": [
        "nft_asset_id#0",
        "box_prefixed_key%0#0",
        "proposal_data#0"
      ]
    },
    "1364": {
      "op": "box_put",
      "stack_out": [
        "nft_asset_id#0"
      ]
    },
    "1365": {
      "retsub": true,
      "op": "retsub"
    },
    "1366": {
      "subroutine": "smart_contracts.citadel_dao.contract.CitadelDAO.distribute_revenue",
      "params": {
        "dao_id#0": "bytes",
        "revenue_amount#0": "uint64"
      },
      "block": "distribute_revenue",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1369": {
      "op": "bytec_2 // 0x64616f5f636f6e6669675f",
      "defined_out": [
        "0x64616f5f636f6e6669675f"
      ],
      "stack_out": [
        "0x64616f5f636f6e6669675f"
      ]
    },
    "1370": {
      "op": "frame_dig -2",
      "defined_out": [
        "0x64616f5f636f6e6669675f",
        "dao_id#0 (copy)"
      ],
      "stack_out": [
        "0x64616f5f636f6e6669675f",
        "dao_id#0 (copy)"
      ]
    },
    "1372": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1373": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1374": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%0#0"
      ]
    },
    "1376": {
      "error": "DAO does not exist",
      "op": "assert // DAO does not exist",
      "stack_out": []
    },
    "1377": {
      "op": "bytec_3 // 0x74726561737572795f",
      "defined_out": [
        "0x74726561737572795f"
      ],
      "stack_out": [
        "0x74726561737572795f"
      ]
    },
    "1378": {
      "op": "frame_dig -2",
      "stack_out": [
        "0x74726561737572795f",
        "dao_id#0 (copy)"
      ]
    },
    "1380": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0"
      ]
    },
    "1381": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "box_prefixed_key%1#0 (copy)"
      ]
    },
    "1382": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%1#0",
        "maybe_exists%1#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "maybe_value%0#0",
        "maybe_exists%1#0"
      ]
    },
    "1383": {
      "error": "check self.treasury_balances entry exists",
      "op": "assert // check self.treasury_balances entry exists",
      "stack_out": [
        "box_prefixed_key%1#0",
        "maybe_value%0#0"
      ]
    },
    "1384": {
      "op": "btoi",
      "defined_out": [
        "box_prefixed_key%1#0",
        "current_treasury#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "current_treasury#0"
      ]
    },
    "1385": {
      "op": "frame_dig -1",
      "defined_out": [
        "box_prefixed_key%1#0",
        "current_treasury#0",
        "revenue_amount#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "current_treasury#0",
        "revenue_amount#0 (copy)"
      ]
    },
    "1387": {
      "op": "+",
      "defined_out": [
        "box_prefixed_key%1#0",
        "materialized_values%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "materialized_values%0#0"
      ]
    },
    "1388": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%1#0",
        "encoded_value%0#0"
      ]
    },
    "1389": {
      "op": "box_put",
      "stack_out": []
    },
    "1390": {
      "op": "pushbytes \"Revenue added to treasury for DAO: \"",
      "defined_out": [
        "\"Revenue added to treasury for DAO: \""
      ],
      "stack_out": [
        "\"Revenue added to treasury for DAO: \""
      ]
    },
    "1427": {
      "op": "frame_dig -2",
      "stack_out": [
        "\"Revenue added to treasury for DAO: \"",
        "dao_id#0 (copy)"
      ]
    },
    "1429": {
      "op": "concat",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1430": {
      "retsub": true,
      "op": "retsub"
    },
    "1431": {
      "subroutine": "smart_contracts.citadel_dao.contract.CitadelDAO.get_dao_info",
      "params": {
        "dao_id#0": "bytes"
      },
      "block": "get_dao_info",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1434": {
      "op": "bytec_2 // 0x64616f5f636f6e6669675f",
      "defined_out": [
        "0x64616f5f636f6e6669675f"
      ],
      "stack_out": [
        "0x64616f5f636f6e6669675f"
      ]
    },
    "1435": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x64616f5f636f6e6669675f",
        "dao_id#0 (copy)"
      ],
      "stack_out": [
        "0x64616f5f636f6e6669675f",
        "dao_id#0 (copy)"
      ]
    },
    "1437": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1438": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1439": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1440": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1442": {
      "op": "bnz get_dao_info_after_if_else@2",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1445": {
      "op": "pushbytes \"DAO not found\"",
      "defined_out": [
        "\"DAO not found\"",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "\"DAO not found\""
      ]
    },
    "1460": {
      "op": "swap"
    },
    "1461": {
      "retsub": true,
      "op": "retsub"
    },
    "1462": {
      "block": "get_dao_info_after_if_else@2",
      "stack_in": [
        "box_prefixed_key%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1464": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "maybe_exists%1#0"
      ]
    },
    "1465": {
      "error": "check self.dao_configs entry exists",
      "op": "assert // check self.dao_configs entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0"
      ]
    },
    "1466": {
      "op": "bytec_3 // 0x74726561737572795f",
      "defined_out": [
        "0x74726561737572795f",
        "box_prefixed_key%0#0",
        "dao_config#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "0x74726561737572795f"
      ]
    },
    "1467": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x74726561737572795f",
        "box_prefixed_key%0#0",
        "dao_config#0",
        "dao_id#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "0x74726561737572795f",
        "dao_id#0 (copy)"
      ]
    },
    "1469": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%2#0",
        "dao_config#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "box_prefixed_key%2#0"
      ]
    },
    "1470": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "maybe_exists%2#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "maybe_value%1#0",
        "maybe_exists%2#0"
      ]
    },
    "1471": {
      "error": "check self.treasury_balances entry exists",
      "op": "assert // check self.treasury_balances entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "maybe_value%1#0"
      ]
    },
    "1472": {
      "op": "btoi",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "treasury_balance#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "treasury_balance#0"
      ]
    },
    "1473": {
      "op": "pushbytes \"DAO: \"",
      "defined_out": [
        "\"DAO: \"",
        "box_prefixed_key%0#0",
        "dao_config#0",
        "treasury_balance#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "treasury_balance#0",
        "\"DAO: \""
      ]
    },
    "1480": {
      "op": "frame_dig -1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "treasury_balance#0",
        "\"DAO: \"",
        "dao_id#0 (copy)"
      ]
    },
    "1482": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "tmp%0#0",
        "treasury_balance#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "treasury_balance#0",
        "tmp%0#0"
      ]
    },
    "1483": {
      "op": "pushbytes \", Min Members: \"",
      "defined_out": [
        "\", Min Members: \"",
        "box_prefixed_key%0#0",
        "dao_config#0",
        "tmp%0#0",
        "treasury_balance#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "treasury_balance#0",
        "tmp%0#0",
        "\", Min Members: \""
      ]
    },
    "1500": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "tmp%1#0",
        "treasury_balance#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "treasury_balance#0",
        "tmp%1#0"
      ]
    },
    "1501": {
      "op": "dig 2",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "dao_config#0 (copy)",
        "tmp%1#0",
        "treasury_balance#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "treasury_balance#0",
        "tmp%1#0",
        "dao_config#0 (copy)"
      ]
    },
    "1503": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "box_prefixed_key%0#0",
        "dao_config#0",
        "dao_config#0 (copy)",
        "tmp%1#0",
        "treasury_balance#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "treasury_balance#0",
        "tmp%1#0",
        "dao_config#0 (copy)",
        "0"
      ]
    },
    "1504": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "tmp%1#0",
        "tmp%3#0",
        "treasury_balance#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "treasury_balance#0",
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "1505": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "tmp%1#0",
        "tmp%4#0",
        "treasury_balance#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "treasury_balance#0",
        "tmp%1#0",
        "tmp%4#0"
      ]
    },
    "1506": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "tmp%5#0",
        "treasury_balance#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "treasury_balance#0",
        "tmp%5#0"
      ]
    },
    "1507": {
      "op": "pushbytes \", Min Stake: \"",
      "defined_out": [
        "\", Min Stake: \"",
        "box_prefixed_key%0#0",
        "dao_config#0",
        "tmp%5#0",
        "treasury_balance#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "treasury_balance#0",
        "tmp%5#0",
        "\", Min Stake: \""
      ]
    },
    "1522": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "tmp%6#0",
        "treasury_balance#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "dao_config#0",
        "treasury_balance#0",
        "tmp%6#0"
      ]
    },
    "1523": {
      "op": "uncover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "treasury_balance#0",
        "tmp%6#0",
        "dao_config#0"
      ]
    },
    "1525": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "box_prefixed_key%0#0",
        "dao_config#0",
        "tmp%6#0",
        "treasury_balance#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "treasury_balance#0",
        "tmp%6#0",
        "dao_config#0",
        "8"
      ]
    },
    "1527": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%6#0",
        "tmp%8#0",
        "treasury_balance#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "treasury_balance#0",
        "tmp%6#0",
        "tmp%8#0"
      ]
    },
    "1528": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%6#0",
        "tmp%9#0",
        "treasury_balance#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "treasury_balance#0",
        "tmp%6#0",
        "tmp%9#0"
      ]
    },
    "1529": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "treasury_balance#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "treasury_balance#0",
        "tmp%10#0"
      ]
    },
    "1530": {
      "op": "pushbytes \", Treasury: \"",
      "defined_out": [
        "\", Treasury: \"",
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "treasury_balance#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "treasury_balance#0",
        "tmp%10#0",
        "\", Treasury: \""
      ]
    },
    "1544": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%11#0",
        "treasury_balance#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "treasury_balance#0",
        "tmp%11#0"
      ]
    },
    "1545": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%11#0",
        "treasury_balance#0"
      ]
    },
    "1546": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%11#0",
        "tmp%12#0"
      ]
    },
    "1547": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%13#0"
      ]
    },
    "1548": {
      "op": "swap"
    },
    "1549": {
      "retsub": true,
      "op": "retsub"
    },
    "1550": {
      "subroutine": "smart_contracts.citadel_dao.contract.CitadelDAO.get_proposal_info",
      "params": {
        "proposal_id#0": "bytes"
      },
      "block": "get_proposal_info",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1553": {
      "op": "bytec 4 // 0x70726f706f73616c5f",
      "defined_out": [
        "0x70726f706f73616c5f"
      ],
      "stack_out": [
        "0x70726f706f73616c5f"
      ]
    },
    "1555": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x70726f706f73616c5f",
        "proposal_id#0 (copy)"
      ],
      "stack_out": [
        "0x70726f706f73616c5f",
        "proposal_id#0 (copy)"
      ]
    },
    "1557": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1558": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1559": {
      "op": "box_len",
      "defined_out": [
        "_%0#0",
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "_%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1560": {
      "op": "bury 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1562": {
      "op": "bnz get_proposal_info_after_if_else@2",
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1565": {
      "op": "pushbytes \"Proposal not found\"",
      "defined_out": [
        "\"Proposal not found\"",
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "\"Proposal not found\""
      ]
    },
    "1585": {
      "op": "swap"
    },
    "1586": {
      "retsub": true,
      "op": "retsub"
    },
    "1587": {
      "block": "get_proposal_info_after_if_else@2",
      "stack_in": [
        "box_prefixed_key%0#0"
      ],
      "op": "frame_dig 0",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "box_prefixed_key%0#0"
      ]
    },
    "1589": {
      "op": "box_get",
      "defined_out": [
        "box_prefixed_key%0#0",
        "maybe_exists%1#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "maybe_exists%1#0"
      ]
    },
    "1590": {
      "error": "check self.proposals entry exists",
      "op": "assert // check self.proposals entry exists",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0"
      ]
    },
    "1591": {
      "op": "dup",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1592": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0 (copy)",
        "2"
      ]
    },
    "1593": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0"
      ]
    },
    "1594": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1596": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "box_prefixed_key%0#0",
        "item_start_offset%0#0",
        "proposal_data#0",
        "proposal_data#0 (copy)"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "proposal_data#0 (copy)",
        "4"
      ]
    },
    "1598": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "proposal_data#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1599": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1601": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1603": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%0#0"
      ]
    },
    "1604": {
      "op": "pushbytes \"Proposal: \"",
      "defined_out": [
        "\"Proposal: \"",
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%0#0",
        "\"Proposal: \""
      ]
    },
    "1616": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "\"Proposal: \"",
        "tmp%0#0"
      ]
    },
    "1617": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%1#0"
      ]
    },
    "1618": {
      "op": "pushbytes \", Status: \"",
      "defined_out": [
        "\", Status: \"",
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%1#0",
        "\", Status: \""
      ]
    },
    "1630": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%2#0"
      ]
    },
    "1631": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%2#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1633": {
      "op": "intc_3 // 54",
      "defined_out": [
        "54",
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%2#0",
        "proposal_data#0 (copy)",
        "54"
      ]
    },
    "1634": {
      "op": "extract_uint16",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_start_offset%1#0",
        "proposal_data#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%2#0",
        "item_start_offset%1#0"
      ]
    },
    "1635": {
      "op": "dig 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%2#0",
        "item_start_offset%1#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1637": {
      "op": "len",
      "defined_out": [
        "box_prefixed_key%0#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "proposal_data#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%2#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "1638": {
      "op": "dig 3",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%2#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1640": {
      "op": "cover 2",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%2#0",
        "proposal_data#0 (copy)",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "1642": {
      "op": "substring3",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "1643": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%4#0"
      ]
    },
    "1644": {
      "op": "pushbytes \", Votes: \"",
      "defined_out": [
        "\", Votes: \"",
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%4#0",
        "\", Votes: \""
      ]
    },
    "1655": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0"
      ]
    },
    "1656": {
      "op": "dig 1",
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#0 (copy)"
      ]
    },
    "1658": {
      "op": "pushint 46 // 46",
      "defined_out": [
        "46",
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "proposal_data#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "proposal_data#0 (copy)",
        "46"
      ]
    },
    "1660": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "tmp%7#0"
      ]
    },
    "1661": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%5#0",
        "tmp%8#0"
      ]
    },
    "1662": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%9#0"
      ]
    },
    "1663": {
      "op": "pushbytes \"/\"",
      "defined_out": [
        "\"/\"",
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%9#0",
        "\"/\""
      ]
    },
    "1666": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%10#0"
      ]
    },
    "1667": {
      "op": "swap",
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "proposal_data#0"
      ]
    },
    "1668": {
      "op": "pushint 38 // 38",
      "defined_out": [
        "38",
        "box_prefixed_key%0#0",
        "proposal_data#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "proposal_data#0",
        "38"
      ]
    },
    "1670": {
      "op": "extract_uint64",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "tmp%12#0"
      ]
    },
    "1671": {
      "op": "itob",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%10#0",
        "tmp%13#0"
      ]
    },
    "1672": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0",
        "tmp%14#0"
      ]
    },
    "1673": {
      "op": "swap"
    },
    "1674": {
      "retsub": true,
      "op": "retsub"
    },
    "1675": {
      "subroutine": "smart_contracts.citadel_dao.contract.CitadelDAO.check_membership",
      "params": {
        "dao_id#0": "bytes",
        "member_address#0": "bytes"
      },
      "block": "check_membership",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "1678": {
      "op": "frame_dig -2",
      "defined_out": [
        "dao_id#0 (copy)"
      ],
      "stack_out": [
        "dao_id#0 (copy)"
      ]
    },
    "1680": {
      "op": "frame_dig -1",
      "defined_out": [
        "dao_id#0 (copy)",
        "member_address#0 (copy)"
      ],
      "stack_out": [
        "dao_id#0 (copy)",
        "member_address#0 (copy)"
      ]
    },
    "1682": {
      "op": "concat",
      "defined_out": [
        "member_key#0"
      ],
      "stack_out": [
        "member_key#0"
      ]
    },
    "1683": {
      "op": "bytec_1 // 0x7374616b655f",
      "defined_out": [
        "0x7374616b655f",
        "member_key#0"
      ],
      "stack_out": [
        "member_key#0",
        "0x7374616b655f"
      ]
    },
    "1684": {
      "op": "swap",
      "stack_out": [
        "0x7374616b655f",
        "member_key#0"
      ]
    },
    "1685": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1686": {
      "op": "box_get",
      "defined_out": [
        "is_member#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "is_member#0"
      ]
    },
    "1687": {
      "op": "bury 1",
      "stack_out": [
        "is_member#0"
      ]
    },
    "1689": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "is_member#0"
      ],
      "stack_out": [
        "is_member#0",
        "0x00"
      ]
    },
    "1692": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "0x00",
        "is_member#0"
      ],
      "stack_out": [
        "is_member#0",
        "0x00",
        "0"
      ]
    },
    "1693": {
      "op": "uncover 2",
      "stack_out": [
        "0x00",
        "0",
        "is_member#0"
      ]
    },
    "1695": {
      "op": "setbit",
      "defined_out": [
        "encoded_bool%0#0"
      ],
      "stack_out": [
        "encoded_bool%0#0"
      ]
    },
    "1696": {
      "retsub": true,
      "op": "retsub"
    },
    "1697": {
      "subroutine": "smart_contracts.citadel_dao.contract.CitadelDAO.get_treasury_balance",
      "params": {
        "dao_id#0": "bytes"
      },
      "block": "get_treasury_balance",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1700": {
      "op": "bytec_3 // 0x74726561737572795f",
      "defined_out": [
        "0x74726561737572795f"
      ],
      "stack_out": [
        "0x74726561737572795f"
      ]
    },
    "1701": {
      "op": "frame_dig -1",
      "defined_out": [
        "0x74726561737572795f",
        "dao_id#0 (copy)"
      ],
      "stack_out": [
        "0x74726561737572795f",
        "dao_id#0 (copy)"
      ]
    },
    "1703": {
      "op": "concat",
      "defined_out": [
        "box_prefixed_key%0#0"
      ],
      "stack_out": [
        "box_prefixed_key%0#0"
      ]
    },
    "1704": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1705": {
      "error": "check self.treasury_balances entry exists",
      "op": "assert // check self.treasury_balances entry exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1706": {
      "op": "btoi",
      "defined_out": [
        "maybe_value_converted%0#0"
      ],
      "stack_out": [
        "maybe_value_converted%0#0"
      ]
    },
    "1707": {
      "retsub": true,
      "op": "retsub"
    }
  }
}